<body>
<h1>Reference</h1>
<!-- DO NOT EDIT: This document was generated by Puppet Strings -->

<h2>Table of Contents</h2>
<h3>Classes</h3>
<h4>Public Classes</h4>
<ul>
<li>
<a href="#apache">
<code>apache</code>
</a>
: Guides the basic setup and installation of Apache on your system.</li>
<li>
<a href="#apachedev">
<code>apache::dev</code>
</a>
: Installs Apache development libraries.</li>
<li>
<a href="#apachemodactions">
<code>apache::mod::actions</code>
</a>
: Installs Apache mod_actions</li>
<li>
<a href="#apachemodalias">
<code>apache::mod::alias</code>
</a>
: Installs and configures <code>mod_alias</code>
.</li>
<li>
<a href="#apachemodapreq2"><code>apache::mod::apreq2</code>
</a>
: Installs <code>mod_apreq2</code>
.</li>
<li>
<a href="#apachemodauth_basic">
<code>apache::mod::auth_basic</code>
</a>
: Installs <code>mod_auth_basic</code>
</li>
<li>
<a href="#apachemodauth_cas">
<code>apache::mod::auth_cas</code>
</a>
: Installs and configures <code>mod_auth_cas</code>
.</li>
<li>
<a href="#apachemodauth_gssapi">
<code>apache::mod::auth_gssapi</code>
</a>
: Installs <code>mod_auth_gsappi</code>
.</li>
<li>
<a href="#apachemodauth_kerb">
<code>apache::mod::auth_kerb</code>
</a>
: Installs <code>mod_auth_kerb</code>
</li>
<li>
<a href="#apachemodauth_mellon">
<code>apache::mod::auth_mellon</code>
</a>
: Installs and configures <code>mod_auth_mellon</code>
.</li>
<li>
<a href="#apachemodauth_openidc">
<code>apache::mod::auth_openidc</code>
</a>
: Installs and configures <code>mod_auth_openidc</code>
.</li>
<li>
<a href="#apachemodauthn_core">
<code>apache::mod::authn_core</code>
</a>
: Installs <code>mod_authn_core</code>
.</li>
<li>
<a href="#apachemodauthn_dbd">
<code>apache::mod::authn_dbd</code>
</a>
: Installs <code>mod_authn_dbd</code>
.</li>
<li>
<a href="#apachemodauthn_file">
<code>apache::mod::authn_file</code>
</a>
: Installs <code>mod_authn_file</code>
.</li>
<li>
<a href="#apachemodauthnz_ldap">
<code>apache::mod::authnz_ldap</code>
</a>
: Installs <code>mod_authnz_ldap</code>
.</li>
<li>
<a href="#apachemodauthnz_pam">
<code>apache::mod::authnz_pam</code>
</a>
: Installs <code>mod_authnz_pam</code>
.</li>
<li>
<a href="#apachemodauthz_default">
<code>apache::mod::authz_default</code>
</a>
: Installs and configures <code>mod_authz_default</code>
.</li>
<li>
<a href="#apachemodauthz_user">
<code>apache::mod::authz_user</code>
</a>
: Installs <code>mod_authz_user</code>
</li>
<li>
<a href="#apachemodautoindex">
<code>apache::mod::autoindex</code>
</a>
: Installs <code>mod_autoindex</code>
</li>
<li>
<a href="#apachemodcache">
<code>apache::mod::cache</code>
</a>
: Installs <code>mod_cache</code>
</li>
<li>
<a href="#apachemodcgi">
<code>apache::mod::cgi</code>
</a>
: Installs <code>mod_cgi</code>
.</li>
<li>
<a href="#apachemodcgid">
<code>apache::mod::cgid</code>
</a>
: Installs <code>mod_cgid</code>
.</li>
<li>
<a href="#apachemodcluster">
<code>apache::mod::cluster</code>
</a>
: Installs <code>mod_cluster</code>
.</li>
<li>
<a href="#apachemoddata">
<code>apache::mod::data</code>
</a>
: Installs and configures <code>mod_data</code>
.</li>
<li>
<a href="#apachemoddav">
<code>apache::mod::dav</code>
</a>
: Installs <code>mod_dav</code>
.</li>
<li>
<a href="#apachemoddav_fs">
<code>apache::mod::dav_fs</code>
</a>
: Installs <code>mod_dav_fs</code>
.</li>
<li>
<a href="#apachemoddav_svn">
<code>apache::mod::dav_svn</code>
</a>
: Installs and configures <code>mod_dav_svn</code>
.</li>
<li>
<a href="#apachemoddbd">
<code>apache::mod::dbd</code>
</a>
: Installs <code>mod_dbd</code>
.</li>
<li>
<a href="#apachemoddeflate">
<code>apache::mod::deflate</code>
</a>
: Installs and configures <code>mod_deflate</code>
.</li>
<li>
<a href="#apachemoddev">
<code>apache::mod::dev</code>
</a>
: Installs <code>mod_dev</code>
.</li>
<li>
<a href="#apachemoddir">
<code>apache::mod::dir</code>
</a>
: Installs and configures <code>mod_dir</code>
.</li>
<li>
<a href="#apachemoddisk_cache">
<code>apache::mod::disk_cache</code>
</a>
: Installs and configures <code>mod_disk_cache</code>
.</li>
<li>
<a href="#apachemoddumpio">
<code>apache::mod::dumpio</code>
</a>
: Installs and configures <code>mod_dumpio</code>
.</li>
<li>
<a href="#apachemodenv">
<code>apache::mod::env</code>
</a>
: Installs <code>mod_env</code>
.</li>
<li>
<a href="#apachemodevent">
<code>apache::mod::event</code>
</a>
: Installs and configures <code>mod_event</code>
.</li>
<li>
<a href="#apachemodexpires">
<code>apache::mod::expires</code>
</a>
: Installs and configures <code>mod_expires</code>
.</li>
<li>
<a href="#apachemodext_filter">
<code>apache::mod::ext_filter</code>
</a>
: Installs and configures <code>mod_ext_filter</code>
.</li>
<li>
<a href="#apachemodfastcgi">
<code>apache::mod::fastcgi</code>
</a>
: Installs <code>mod_fastcgi</code>
.</li>
<li>
<a href="#apachemodfcgid">
<code>apache::mod::fcgid</code>
</a>
: Installs and configures <code>mod_fcgid</code>
.</li>
<li>
<a href="#apachemodfilter">
<code>apache::mod::filter</code>
</a>
: Installs <code>mod_filter</code>
.</li>
<li>
<a href="#apachemodgeoip">
<code>apache::mod::geoip</code>
</a>
: Installs and configures <code>mod_geoip</code>
.</li>
<li>
<a href="#apachemodheaders">
<code>apache::mod::headers</code>
</a>
: Installs and configures <code>mod_headers</code>
.</li>
<li>
<a href="#apachemodhttp2">
<code>apache::mod::http2</code>
</a>
: Installs and configures <code>mod_http2</code>
.</li>
<li>
<a href="#apachemodinclude">
<code>apache::mod::include</code>
</a>
: Installs <code>mod_include</code>
.</li>
<li>
<a href="#apachemodinfo">
<code>apache::mod::info</code>
</a>
: Installs and configures <code>mod_info</code>
.</li>
<li>
<a href="#apachemodintercept_form_submit">
<code>apache::mod::intercept_form_submit</code>
</a>
: Installs <code>mod_intercept_form_submit</code>
.</li>
<li>
<a href="#apachemoditk">
<code>apache::mod::itk</code>
</a>
: Installs MPM <code>mod_itk</code>
.</li>
<li>
<a href="#apachemodjk">
<code>apache::mod::jk</code>
</a>
: Installs <code>mod_jk</code>
.</li>
<li>
<a href="#apachemodldap">
<code>apache::mod::ldap</code>
</a>
: Installs and configures <code>mod_ldap</code>
.</li>
<li>
<a href="#apachemodlookup_identity">
<code>apache::mod::lookup_identity</code>
</a>
: Installs <code>mod_lookup_identity</code>
</li>
<li>
<a href="#apachemodmacro">
<code>apache::mod::macro</code>
</a>
: Installs <code>mod_macro</code>
.</li>
<li>
<a href="#apachemodmd">
<code>apache::mod::md</code>
</a>
: Installs and configures <code>mod_md</code>
.</li>
<li>
<a href="#apachemodmime">
<code>apache::mod::mime</code>
</a>
: Installs and configures <code>mod_mime</code>
.</li>
<li>
<a href="#apachemodmime_magic">
<code>apache::mod::mime_magic</code>
</a>
: Installs and configures <code>mod_mime_magic</code>
.</li>
<li>
<a href="#apachemodnegotiation">
<code>apache::mod::negotiation</code>
</a>
: Installs and configures <code>mod_negotiation</code>
.</li>
<li>
<a href="#apachemodnss">
<code>apache::mod::nss</code>
</a>
: Installs and configures <code>mod_nss</code>
.</li>
<li>
<a href="#apachemodpagespeed">
<code>apache::mod::pagespeed</code>
</a>
: Installs and configures <code>mod_pagespeed</code>
.</li>
<li>
<a href="#apachemodpassenger">
<code>apache::mod::passenger</code>
</a>
: Installs <code>mod_pasenger</code>
.</li>
<li>
<a href="#apachemodperl">
<code>apache::mod::perl</code>
</a>
: Installs <code>mod_perl</code>
.</li>
<li>
<a href="#apachemodperuser">
<code>apache::mod::peruser</code>
</a>
: Installs <code>mod_peruser</code>
.</li>
<li>
<a href="#apachemodphp">
<code>apache::mod::php</code>
</a>
: Installs <code>mod_php</code>
.</li>
<li>
<a href="#apachemodprefork"><code>apache::mod::prefork</code>
</a>
: Installs and configures MPM <code>prefork</code>
.</li>
<li>
<a href="#apachemodproxy">
<code>apache::mod::proxy</code>
</a>
: Installs and configures <code>mod_proxy</code>
.</li>
<li>
<a href="#apachemodproxy_ajp">
<code>apache::mod::proxy_ajp</code>
</a>
: Installs <code>mod_proxy_ajp</code>
.</li>
<li>
<a href="#apachemodproxy_balancer">
<code>apache::mod::proxy_balancer</code>
</a>
: Installs and configures <code>mod_proxy_balancer</code>
.</li>
<li>
<a href="#apachemodproxy_connect">
<code>apache::mod::proxy_connect</code>
</a>
: Installs <code>mod_proxy_connect</code>
.</li>
<li>
<a href="#apachemodproxy_fcgi">
<code>apache::mod::proxy_fcgi</code>
</a>
: Installs <code>mod_proxy_fcgi</code>
.</li>
<li>
<a href="#apachemodproxy_html">
<code>apache::mod::proxy_html</code>
</a>
: Installs <code>mod_proxy_html</code>
.</li>
<li>
<a href="#apachemodproxy_http">
<code>apache::mod::proxy_http</code>
</a>
: Installs <code>mod_proxy_http</code>
.</li>
<li>
<a href="#apachemodproxy_wstunnel">
<code>apache::mod::proxy_wstunnel</code>
</a>
: Installs <code>mod_proxy_wstunnel</code>
.</li>
<li>
<a href="#apachemodpython">
<code>apache::mod::python</code>
</a>
: Installs and configures <code>mod_python</code>
.</li>
<li>
<a href="#apachemodremoteip">
<code>apache::mod::remoteip</code>
</a>
: Installs and configures <code>mod_remoteip</code>
.</li>
<li>
<a href="#apachemodreqtimeout">
<code>apache::mod::reqtimeout</code>
</a>
: Installs and configures <code>mod_reqtimeout</code>
.</li>
<li>
<a href="#apachemodrewrite">
<code>apache::mod::rewrite</code>
</a>
: Installs <code>mod_rewrite</code>
.</li>
<li>
<a href="#apachemodrpaf">
<code>apache::mod::rpaf</code>
</a>
: Installs and configures <code>mod_rpaf</code>
.</li>
<li>
<a href="#apachemodsecurity">
<code>apache::mod::security</code>
</a>
: Installs and configures <code>mod_security</code>
.</li>
<li>
<a href="#apachemodsetenvif">
<code>apache::mod::setenvif</code>
</a>
: Installs <code>mod_setenvif</code>
.</li>
<li>
<a href="#apachemodshib">
<code>apache::mod::shib</code>
</a>
: Installs and configures <code>mod_shib</code>
.</li>
<li>
<a href="#apachemodsocache_shmcb">
<code>apache::mod::socache_shmcb</code>
</a>
: Installs <code>mod_socache_shmcb</code>
.</li>
<li>
<a href="#apachemodspeling">
<code>apache::mod::speling</code>
</a>
: Installs <code>mod_spelling</code>
.</li>
<li>
<a href="#apachemodssl">
<code>apache::mod::ssl</code>
</a>
: Installs <code>mod_ssl</code>
.</li>
<li>
<a href="#apachemodstatus">
<code>apache::mod::status</code>
</a>
: Installs and configures <code>mod_status</code>
.</li>
<li>
<a href="#apachemodsuexec">
<code>apache::mod::suexec</code>
</a>
: Installs <code>mod_suexec</code>
.</li>
<li>
<a href="#apachemodsuphp">
<code>apache::mod::suphp</code>
</a>
: Installs <code>mod_suphp</code>
.</li>
<li>
<a href="#apachemoduserdir">
<code>apache::mod::userdir</code>
</a>
: Installs and configures <code>mod_userdir</code>
.</li>
<li>
<a href="#apachemodversion">
<code>apache::mod::version</code>
</a>
: Installs <code>mod_version</code>
.</li>
<li>
<a href="#apachemodvhost_alias">
<code>apache::mod::vhost_alias</code>
</a>
: Installs Apache <code>mod_vhost_alias</code>
.</li>
<li>
<a href="#apachemodwatchdog">
<code>apache::mod::watchdog</code>
</a>
: Installs and configures <code>mod_watchdog</code>
.</li>
<li>
<a href="#apachemodworker">
<code>apache::mod::worker</code>
</a>
: Installs and manages the MPM <code>worker</code>
.</li>
<li>
<a href="#apachemodwsgi">
<code>apache::mod::wsgi</code>
</a>
: Installs and configures <code>mod_wsgi</code>
.</li>
<li>
<a href="#apachemodxsendfile">
<code>apache::mod::xsendfile</code>
</a>
: Installs <code>mod_xsendfile</code>
.</li>
<li>
<a href="#apachempmdisable_mpm_event">
<code>apache::mpm::disable_mpm_event</code>
</a>
</li>
<li>
<a href="#apachempmdisable_mpm_prefork"><code>apache::mpm::disable_mpm_prefork</code>
</a>
</li>
<li>
<a href="#apachempmdisable_mpm_worker">
<code>apache::mpm::disable_mpm_worker</code>
</a>
</li>
<li>
<a href="#apachevhosts">
<code>apache::vhosts</code>
</a>
: Creates <code>apache::vhost</code>
 defined types.</li>
</ul>
<h4>Private Classes</h4>
<ul>
<li>
<code>apache::confd::no_accf</code>
: Manages the <code>no-accf.conf</code>
 file.</li>
<li>
<code>apache::default_confd_files</code>
: Helper for setting up default conf.d files.</li>
<li>
<code>apache::default_mods</code>
: Installs and congfigures default mods for Apache</li>
<li>
<code>apache::package</code>
: Installs an Apache MPM.</li>
<li>
<code>apache::params</code>
: This class manages Apache parameters</li>
<li>
<code>apache::php</code>
: This class installs PHP for Apache.</li>
<li>
<code>apache::proxy</code>
: This class enabled the proxy module for Apache.</li>
<li>
<code>apache::python</code>
: This class installs Python for Apache</li>
<li>
<code>apache::service</code>
: Installs and configures Apache service.</li>
<li>
<code>apache::ssl</code>
: This class installs Apache SSL capabilities</li>
<li>
<code>apache::version</code>
: Try to automatically detect the version by OS</li>
</ul>
<h3>Defined types</h3>
<h4>Public Defined types</h4>
<ul>
<li>
<a href="#apachebalancer">
<code>apache::balancer</code>
</a>
: This type will create an apache balancer cluster file inside the conf.d
  directory.</li>
<li>
<a href="#apachebalancermember">
<code>apache::balancermember</code>
</a>
: Defines members of <code>mod_proxy_balancer</code>
</li>
<li>
<a href="#apachecustom_config">
<code>apache::custom_config</code>
</a>
: Adds a custom configuration file to the Apache server's <code>conf.d</code>
 directory.</li>
<li>
<a href="#apachefastcgiserver">
<code>apache::fastcgi::server</code>
</a>
: Defines one or more external FastCGI servers to handle specific file types. Use this
  defined type with <code>mod_fastcgi</code>
.</li>
<li>
<a href="#apachelisten">
<code>apache::listen</code>
</a>
: Adds <code>Listen</code>
 directives to <code>ports.conf</code>
 that define the
  Apache server's or a virtual host's listening address and port.</li>
<li>
<a href="#apachemod">
<code>apache::mod</code>
</a>
: Installs packages for an Apache module that doesn't have a corresponding
  <code>apache::mod::&lt;MODULE NAME&gt;</code>
 class.</li>
<li>
<a href="#apachenamevirtualhost">
<code>apache::namevirtualhost</code>
</a>
: Enables name-based virtual hosts</li>
<li>
<a href="#apachevhost">
<code>apache::vhost</code>
</a>
</li>
<li>
<a href="#apachevhostcustom">
<code>apache::vhost::custom</code>
</a>
: A wrapper around the <code>apache::custom_config</code>
 defined type.</li>
<li>
<a href="#apachevhostfragment">
<code>apache::vhost::fragment</code>
</a>
: Define a fragment within a vhost</li>
</ul>
<h4>Private Defined types</h4>
<ul>
<li>
<code>apache::default_mods::load</code>
: Helper used by <code>apache::default_mods</code>
</li>
<li>
<code>apache::mpm</code>
: Enables the use of Apache MPMs.</li>
<li>
<code>apache::peruser::multiplexer</code>
: Checks if an Apache module has a class.</li>
<li>
<code>apache::peruser::processor</code>
: Enables the <code>Peruser</code>
 module for FreeBSD only.</li>
<li>
<code>apache::security::rule_link</code>
: Links the activated_rules from <code>apache::mod::security</code>
 to the respective CRS rules on disk.</li>
</ul>
<h3>Resource types</h3>
<ul>
<li>
<a href="#a2mod">
<code>a2mod</code>
</a>
: Manage Apache 2 modules</li>
</ul>
<h3>Functions</h3>
<ul>
<li>
<a href="#apacheapache_pw_hash">
<code>apache::apache_pw_hash</code>
</a>
: DEPRECATED.  Use the function <a href="#apachepw_hash">
<code>apache::pw_hash</code>
</a>
 instead.</li>
<li>
<a href="#apachebool2httpd">
<code>apache::bool2httpd</code>
</a>
: Transform a supposed boolean to On or Off. Passes all other values through.</li>
<li>
<a href="#apachepw_hash">
<code>apache::pw_hash</code>
</a>
: Hashes a password in a format suitable for htpasswd files read by apache.</li>
<li>
<a href="#apache_pw_hash">
<code>apache_pw_hash</code>
</a>
: DEPRECATED.  Use the namespaced function <a href="#apachepw_hash">
<code>apache::pw_hash</code>
</a>
 instead.</li>
<li>
<a href="#bool2httpd">
<code>bool2httpd</code>
</a>
: DEPRECATED.  Use the namespaced function <a href="#apachebool2httpd">
<code>apache::bool2httpd</code>
</a>
 instead.</li>
</ul>
<h3>Data types</h3>
<ul>
<li>
<a href="#apacheloglevel">
<code>Apache::LogLevel</code>
</a>
: A string that conforms to the Apache <code>LogLevel</code>
 syntax.</li>
<li>
<a href="#apacheoidcsettings">
<code>Apache::OIDCSettings</code>
</a>
: https://github.com/zmartzone/mod_auth_openidc/blob/master/auth_openidc.conf</li>
</ul>
<h3>Tasks</h3>
<ul>
<li>
<a href="#init">
<code>init</code>
</a>
: Allows you to perform apache service functions</li>
</ul>
<h2>Classes</h2>
<h3>
<a name="apache"></a>
<code>apache</code>
</h3>
<p>When this class is declared with the default options, Puppet:</p>
<ul>
<li>
Installs the appropriate Apache software package and <a href="#default_mods">required Apache modules</a>
 for your operating system.</li>
<li>
Places the required configuration files in a directory, with the <a href="#conf_dir">default location</a>
 determined by your operating system.</li>
<li>
Configures the server with a default virtual host and standard port (<code>80</code>
) and address (<code>\*</code>
) bindings.</li>
<li>
Creates a document root directory determined by your operating system, typically <code>/var/www</code>
.</li>
<li>Starts the Apache service.</li>
</ul>
<p>If an ldaps:// URL is specified, the mode becomes SSL and the setting of LDAPTrustedMode is ignored.</p>
<h4>Examples</h4>
<h5></h5>
<pre><code class="language-puppet">class { 'apache': }
</code></pre>
<h4>Parameters</h4>
<p>
The following parameters are available in the <code>apache</code>
 class:</p>
<ul>
<li>
<a href="#allow_encoded_slashes">
<code>allow_encoded_slashes</code>
</a>
</li>
<li>
<a href="#apache_version">
<code>apache_version</code>
</a>
</li>
<li>
<a href="#conf_dir">
<code>conf_dir</code>
</a>
</li>
<li>
<a href="#conf_template">
<code>conf_template</code>
</a>
</li>
<li>
<a href="#confd_dir">
<code>confd_dir</code>
</a>
</li>
<li>
<a href="#default_charset">
<code>default_charset</code>
</a>
</li>
<li>
<a href="#default_confd_files">
<code>default_confd_files</code>
</a>
</li>
<li>
<a href="#default_mods">
<code>default_mods</code>
</a>
</li>
<li>
<a href="#default_ssl_ca">
<code>default_ssl_ca</code>
</a>
</li>
<li>
<a href="#default_ssl_cert">
<code>default_ssl_cert</code>
</a>
</li>
<li>
<a href="#default_ssl_chain">
<code>default_ssl_chain</code>
</a>
</li>
<li>
<a href="#default_ssl_crl">
<code>default_ssl_crl</code>
</a>
</li>
<li>
<a href="#default_ssl_crl_path">
<code>default_ssl_crl_path</code>
</a>
</li>
<li>
<a href="#default_ssl_crl_check">
<code>default_ssl_crl_check</code>
</a>
</li>
<li>
<a href="#default_ssl_key">
<code>default_ssl_key</code>
</a>
</li>
<li>
<a href="#default_ssl_vhost">
<code>default_ssl_vhost</code>
</a>
</li>
<li>
<a href="#default_type">
<code>default_type</code>
</a>
</li>
<li>
<a href="#default_vhost">
<code>default_vhost</code>
</a>
</li>
<li>
<a href="#dev_packages">
<code>dev_packages</code>
</a>
</li>
<li>
<a href="#docroot">
<code>docroot</code>
</a>
</li>
<li>
<a href="#error_documents">
<code>error_documents</code>
</a>
</li>
<li>
<a href="#group">
<code>group</code>
</a>
</li>
<li>
<a href="#httpd_dir">
<code>httpd_dir</code>
</a>
</li>
<li>
<a href="#http_protocol_options">
<code>http_protocol_options</code>
</a>
</li>
<li>
<a href="#keepalive">
<code>keepalive</code>
</a>
</li>
<li>
<a href="#keepalive_timeout">
<code>keepalive_timeout</code>
</a>
</li>
<li>
<a href="#max_keepalive_requests">
<code>max_keepalive_requests</code>
</a>
</li>
<li>
<a href="#hostname_lookups">
<code>hostname_lookups</code>
</a>
</li>
<li>
<a href="#ldap_trusted_mode">
<code>ldap_trusted_mode</code>
</a>
</li>
<li>
<a href="#ldap_verify_server_cert">
<code>ldap_verify_server_cert</code>
</a>
</li>
<li>
<a href="#lib_path">
<code>lib_path</code>
</a>
</li>
<li>
<a href="#log_level">
<code>log_level</code>
</a>
</li>
<li>
<a href="#log_formats">
<code>log_formats</code>
</a>
</li>
<li>
<a href="#logroot">
<code>logroot</code>
</a>
</li>
<li>
<a href="#logroot_mode">
<code>logroot_mode</code>
</a>
</li>
<li>
<a href="#manage_group">
<code>manage_group</code>
</a>
</li>
<li>
<a href="#supplementary_groups">
<code>supplementary_groups</code>
</a>
</li>
<li>
<a href="#manage_user">
<code>manage_user</code>
</a>
</li>
<li>
<a href="#mod_dir">
<code>mod_dir</code>
</a>
</li>
<li>
<a href="#mod_libs">
<code>mod_libs</code>
</a>
</li>
<li>
<a href="#mod_packages">
<code>mod_packages</code>
</a>
</li>
<li>
<a href="#mpm_module">
<code>mpm_module</code>
</a>
</li>
<li>
<a href="#package_ensure">
<code>package_ensure</code>
</a>
</li>
<li>
<a href="#pidfile">
<code>pidfile</code>
</a>
</li>
<li>
<a href="#ports_file">
<code>ports_file</code>
</a>
</li>
<li>
<a href="#protocols">
<code>protocols</code>
</a>
</li>
<li>
<a href="#protocols_honor_order">
<code>protocols_honor_order</code>
</a>
</li>
<li>
<a href="#purge_configs">
<code>purge_configs</code>
</a>
</li>
<li>
<a href="#purge_vhost_dir">
<code>purge_vhost_dir</code>
</a>
</li>
<li>
<a href="#rewrite_lock">
<code>rewrite_lock</code>
</a>
</li>
<li>
<a href="#sendfile">
<code>sendfile</code>
</a>
</li>
<li>
<a href="#serveradmin">
<code>serveradmin</code>
</a>
</li>
<li>
<a href="#servername">
<code>servername</code>
</a>
</li>
<li>
<a href="#server_root">
<code>server_root</code>
</a>
</li>
<li>
<a href="#server_signature">
<code>server_signature</code>
</a>
</li>
<li>
<a href="#server_tokens">
<code>server_tokens</code>
</a>
</li>
<li>
<a href="#service_enable">
<code>service_enable</code>
</a>
</li>
<li>
<a href="#service_ensure">
<code>service_ensure</code>
</a>
</li>
<li>
<a href="#service_name">
<code>service_name</code>
</a>
</li>
<li>
<a href="#service_manage">
<code>service_manage</code>
</a>
</li>
<li>
<a href="#service_restart">
<code>service_restart</code>
</a>
</li>
<li>
<a href="#timeout">
<code>timeout</code>
</a>
</li>
<li>
<a href="#trace_enable">
<code>trace_enable</code>
</a>
</li>
<li>
<a href="#use_canonical_name">
<code>use_canonical_name</code>
</a>
</li>
<li>
<a href="#use_systemd">
<code>use_systemd</code>
</a>
</li>
<li>
<a href="#file_mode">
<code>file_mode</code>
</a>
</li>
<li>
<a href="#root_directory_options">
<code>root_directory_options</code>
</a>
</li>
<li>
<a href="#root_directory_secured">
<code>root_directory_secured</code>
</a>
</li>
<li>
<a href="#vhost_dir">
<code>vhost_dir</code>
</a>
</li>
<li>
<a href="#vhost_include_pattern">
<code>vhost_include_pattern</code>
</a>
</li>
<li>
<a href="#user">
<code>user</code>
</a>
</li>
<li>
<a href="#apache_name">
<code>apache_name</code>
</a>
</li>
<li>
<a href="#error_log">
<code>error_log</code>
</a>
</li>
<li>
<a href="#scriptalias">
<code>scriptalias</code>
</a>
</li>
<li>
<a href="#access_log_file">
<code>access_log_file</code>
</a>
</li>
<li>
<a href="#limitreqfields">
<code>limitreqfields</code>
</a>
</li>
<li>
<a href="#limitreqfieldsize">
<code>limitreqfieldsize</code>
</a>
</li>
<li>
<a href="#ip">
<code>ip</code>
</a>
</li>
<li>
<a href="#purge_vdir">
<code>purge_vdir</code>
</a>
</li>
<li>
<a href="#conf_enabled">
<code>conf_enabled</code>
</a>
</li>
<li>
<a href="#vhost_enable_dir">
<code>vhost_enable_dir</code>
</a>
</li>
<li>
<a href="#mod_enable_dir">
<code>mod_enable_dir</code>
</a>
</li>
<li>
<a href="#ssl_file">
<code>ssl_file</code>
</a>
</li>
<li>
<a href="#file_e_tag">
<code>file_e_tag</code>
</a>
</li>
<li>
<a href="#use_optional_includes">
<code>use_optional_includes</code>
</a>
</li>
<li>
<a href="#mime_types_additional">
<code>mime_types_additional</code>
</a>
</li>
</ul>
<h5>
<a name="allow_encoded_slashes"></a>
<code>allow_encoded_slashes</code>
</h5>
<p>
Data type: <code>Optional[Enum['on', 'off', 'nodecode']]</code>
</p>
<p>
Sets the server default for the <code>AllowEncodedSlashes</code>
 declaration, which modifies the
responses to URLs containing '' and '/' characters. If not specified, this parameter omits
the declaration from the server's configuration and uses Apache's default setting of 'off'.</p>
<p>
Default value: <code>undef</code>
</p>
<h5>
<a name="apache_version"></a>
<code>apache_version</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>Configures module template behavior, package names, and default Apache modules by defining
the version of Apache to use. We do not recommend manually configuring this parameter
without reason.</p>
<p>
Default value: <code>$apache::version::default</code>
</p>
<h5>
<a name="conf_dir"></a>
<code>conf_dir</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>Sets the directory where the Apache server's main configuration file is located.</p>
<p>
Default value: <code>$apache::params::conf_dir</code>
</p>
<h5>
<a name="conf_template"></a>
<code>conf_template</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>
Defines the template used for the main Apache configuration file. Modifying this
parameter is potentially risky, as the apache module is designed to use a minimal
configuration file customized by <code>conf.d</code>
 entries.</p>
<p>
Default value: <code>$apache::params::conf_template</code>
</p>
<h5>
<a name="confd_dir"></a>
<code>confd_dir</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>Sets the location of the Apache server's custom configuration directory.</p>
<p>
Default value: <code>$apache::params::confd_dir</code>
</p>
<h5>
<a name="default_charset"></a>
<code>default_charset</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>
Used as the <code>AddDefaultCharset</code>
 directive in the main configuration file.</p>
<p>
Default value: <code>undef</code>
</p>
<h5>
<a name="default_confd_files"></a>
<code>default_confd_files</code>
</h5>
<p>
Data type: <code>Boolean</code>
</p>
<p>
Determines whether Puppet generates a default set of includable Apache configuration files
in the directory defined by the <code>confd_dir</code>
 parameter. These configuration files
correspond to what is typically installed with the Apache package on the server's
operating system.</p>
<p>
Default value: <code>true</code>
</p>
<h5>
<a name="default_mods"></a>
<code>default_mods</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>
Determines whether to configure and enable a set of default Apache modules depending on
your operating system.<br />

If <code>false</code>
, Puppet includes only the Apache modules required to make the HTTP daemon work
on your operating system, and you can declare any other modules separately using the
<code>apache::mod::&lt;MODULE NAME&gt;</code>
 class or <code>apache::mod</code>
 defined type.<br />

If <code>true</code>
, Puppet installs additional modules, depending on the operating system and
the values of <code>apache_version</code>
 and <code>mpm_module</code>
 parameters. Because these lists of
modules can change frequently, consult the Puppet module's code for up-to-date lists.<br />
If this parameter contains an array, Puppet instead enables all passed Apache modules.</p>
<p>
Default value: <code>true</code>
</p>
<h5>
<a name="default_ssl_ca"></a>
<code>default_ssl_ca</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>
Sets the default certificate authority for the Apache server.<br />

Although the default value results in a functioning Apache server, you <strong>must</strong>
 update
this parameter with your certificate authority information before deploying this server in
a production environment.</p>
<p>
Default value: <code>undef</code>
</p>
<h5>
<a name="default_ssl_cert"></a>
<code>default_ssl_cert</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>
Sets the SSL encryption certificate location.<br />

Although the default value results in a functioning Apache server, you <strong>must</strong>
 update this
parameter with your certificate location before deploying this server in a production environment.</p>
<p>
Default value: <code>$apache::params::default_ssl_cert</code>
</p>
<h5>
<a name="default_ssl_chain"></a>
<code>default_ssl_chain</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>
Sets the default SSL chain location.<br />

Although this default value results in a functioning Apache server, you <strong>must</strong>
 update
this parameter with your SSL chain before deploying this server in a production environment.</p>
<p>
Default value: <code>undef</code>
</p>
<h5>
<a name="default_ssl_crl"></a>
<code>default_ssl_crl</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>
Sets the path of the default certificate revocation list (CRL) file to use.<br />

Although this default value results in a functioning Apache server, you <strong>must</strong>
 update
this parameter with the CRL file path before deploying this server in a production
environment. You can use this parameter with or in place of the <code>default_ssl_crl_path</code>
.</p>
<p>
Default value: <code>undef</code>
</p>
<h5>
<a name="default_ssl_crl_path"></a>
<code>default_ssl_crl_path</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>
Sets the server's certificate revocation list path, which contains your CRLs.<br />

Although this default value results in a functioning Apache server, you <strong>must</strong>
 update
this parameter with the CRL file path before deploying this server in a production environment.</p>
<p>
Default value: <code>undef</code>
</p>
<h5>
<a name="default_ssl_crl_check"></a>
<code>default_ssl_crl_check</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>
Sets the default certificate revocation check level via the <code>SSLCARevocationCheck</code>
 directive.
This parameter applies only to Apache 2.4 or higher and is ignored on older versions.<br />

Although this default value results in a functioning Apache server, you <strong>must</strong>
 specify
this parameter when using certificate revocation lists in a production environment.</p>
<p>
Default value: <code>undef</code>
</p>
<h5>
<a name="default_ssl_key"></a>
<code>default_ssl_key</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>
Sets the SSL certificate key file location.
Although the default values result in a functioning Apache server, you <strong>must</strong>
 update
this parameter with your SSL key's location before deploying this server in a production
environment.</p>
<p>
Default value: <code>$apache::params::default_ssl_key</code>
</p>
<h5>
<a name="default_ssl_vhost"></a>
<code>default_ssl_vhost</code>
</h5>
<p>
Data type: <code>Boolean</code>
</p>
<p>
Configures a default SSL virtual host.
If <code>true</code>
, Puppet automatically configures the following virtual host using the
<code>apache::vhost</code>
 defined type:</p>
<pre><code class="language-puppet">apache::vhost { 'default-ssl':
  port            =&gt; 443,
  ssl             =&gt; true,
  docroot         =&gt; $docroot,
  scriptalias     =&gt; $scriptalias,
  serveradmin     =&gt; $serveradmin,
  access_log_file =&gt; &quot;ssl_${access_log_file}&quot;,
}
</code></pre>
<p>
<strong>Note</strong>
: SSL virtual hosts only respond to HTTPS queries.</p>
<p>
Default value: <code>false</code>
</p>
<h5>
<a name="default_type"></a>
<code>default_type</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>
<em>Apache 2.2 only</em>
. Sets the MIME <code>content-type</code>
 sent if the server cannot otherwise
determine an appropriate <code>content-type</code>
. This directive is deprecated in Apache 2.4 and
newer, and is only for backwards compatibility in configuration files.</p>
<p>
Default value: <code>'none'</code>
</p>
<h5>
<a name="default_vhost"></a>
<code>default_vhost</code>
</h5>
<p>
Data type: <code>Boolean</code>
</p>
<p>
Configures a default virtual host when the class is declared.<br />

To configure customized virtual hosts, set this parameter's
value to <code>false</code>
.<br /></p>
<blockquote>
<p>
<strong>Note</strong>
: Apache will not start without at least one virtual host. If you set this
to <code>false</code>
 you must configure a virtual host elsewhere.</p>
</blockquote>
<p>
Default value: <code>true</code>
</p>
<h5>
<a name="dev_packages"></a>
<code>dev_packages</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>
Configures a specific dev package to use.<br />

For example, using httpd 2.4 from the IUS yum repo:<br /></p>
<pre><code class="language-puppet">include ::apache::dev
class { 'apache':
  apache_name  =&gt; 'httpd24u',
  dev_packages =&gt; 'httpd24u-devel',
}
</code></pre>
<p>
Default value: <code>$apache::params::dev_packages</code>
</p>
<h5>
<a name="docroot"></a>
<code>docroot</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>
Sets the default <code>DocumentRoot</code>
 location.</p>
<p>
Default value: <code>$apache::params::docroot</code>
</p>
<h5>
<a name="error_documents"></a>
<code>error_documents</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>
Determines whether to enable <a href="https://httpd.apache.org/docs/current/custom-error.html">custom error documents</a>
 on the Apache server.</p>
<p>
Default value: <code>false</code>
</p>
<h5>
<a name="group"></a>
<code>group</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>
Sets the group ID that owns any Apache processes spawned to answer requests.<br />

By default, Puppet attempts to manage this group as a resource under the <code>apache</code>

class, determining the group based on the operating system as detected by the
<code>apache::params</code>
 class. To prevent the group resource from being created and use a group
created by another Puppet module, set the <code>manage_group</code>
 parameter's value to <code>false</code>
.<br /></p>
<blockquote>
<p>
<strong>Note</strong>
: Modifying this parameter only changes the group ID that Apache uses to spawn
child processes to access resources. It does not change the user that owns the parent server
process.</p>
</blockquote>
<p>
Default value: <code>$apache::params::group</code>
</p>
<h5>
<a name="httpd_dir"></a>
<code>httpd_dir</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>Sets the Apache server's base configuration directory. This is useful for specially
repackaged Apache server builds but might have unintended consequences when combined
with the default distribution packages.</p>
<p>
Default value: <code>$apache::params::httpd_dir</code>
</p>
<h5>
<a name="http_protocol_options"></a>
<code>http_protocol_options</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>
Specifies the strictness of HTTP protocol checks.<br />

Valid options: any sequence of the following alternative values: <code>Strict</code>
 or <code>Unsafe</code>
,
<code>RegisteredMethods</code>
 or <code>LenientMethods</code>
, and <code>Allow0.9</code>
 or <code>Require1.0</code>
.</p>
<p>
Default value: <code>$apache::params::http_protocol_options</code>
</p>
<h5>
<a name="keepalive"></a>
<code>keepalive</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>
Determines whether to enable persistent HTTP connections with the <code>KeepAlive</code>
 directive.
If you set this to <code>On</code>
, use the <code>keepalive_timeout</code>
 and <code>max_keepalive_requests</code>
 parameters
to set relevant options.<br /></p>
<p>
Default value: <code>$apache::params::keepalive</code>
</p>
<h5>
<a name="keepalive_timeout"></a>
<code>keepalive_timeout</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>
Sets the <code>KeepAliveTimeout</code>
 directive, which determines the amount of time the Apache
server waits for subsequent requests on a persistent HTTP connection. This parameter is
only relevant if the <code>keepalive</code>
 parameter is enabled.</p>
<p>
Default value: <code>$apache::params::keepalive_timeout</code>
</p>
<h5>
<a name="max_keepalive_requests"></a>
<code>max_keepalive_requests</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>
Limits the number of requests allowed per connection when the <code>keepalive</code>
 parameter is enabled.</p>
<p>
Default value: <code>$apache::params::max_keepalive_requests</code>
</p>
<h5>
<a name="hostname_lookups"></a>
<code>hostname_lookups</code>
</h5>
<p>
Data type: <code>Enum['Off', 'On', 'Double', 'off', 'on', 'double']</code>
</p>
<p>
This directive enables DNS lookups so that host names can be logged and passed to
CGIs/SSIs in REMOTE_HOST.<br /></p>
<blockquote>
<p>
<strong>Note</strong>
: If enabled, it impacts performance significantly.</p>
</blockquote>
<p>
Default value: <code>$apache::params::hostname_lookups</code>
</p>
<h5>
<a name="ldap_trusted_mode"></a>
<code>ldap_trusted_mode</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>The following modes are supported:</p>
<p>NONE - no encryption
SSL - ldaps:// encryption on default port 636
TLS - STARTTLS encryption on default port 389
Not all LDAP toolkits support all the above modes. An error message will be logged at
runtime if a mode is not supported, and the connection to the LDAP server will fail.</p>
<p>
Default value: <code>undef</code>
</p>
<h5>
<a name="ldap_verify_server_cert"></a>
<code>ldap_verify_server_cert</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>Specifies whether to force the verification of a server certificate when establishing an SSL
connection to the LDAP server.
On|Off</p>
<p>
Default value: <code>undef</code>
</p>
<h5>
<a name="lib_path"></a>
<code>lib_path</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>
Specifies the location whereApache module files are stored.<br /></p>
<blockquote>
<p>
<strong>Note</strong>
: Do not configure this parameter manually without special reason.</p>
</blockquote>
<p>
Default value: <code>$apache::params::lib_path</code>
</p>
<h5>
<a name="log_level"></a>
<code>log_level</code>
</h5>
<p>
Data type: <code>Apache::LogLevel</code>
</p>
<p>
Configures the apache <a href="https://httpd.apache.org/docs/current/mod/core.html#loglevel">LogLevel</a>
 directive
which adjusts the verbosity of the messages recorded in the error logs.</p>
<p>
Default value: <code>$apache::params::log_level</code>
</p>
<h5>
<a name="log_formats"></a>
<code>log_formats</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>
Define additional <code>LogFormat</code>
 directives. Values: A hash, such as:</p>
<pre><code class="language-puppet">$log_formats = { vhost_common =&gt; '%v %h %l %u %t \&quot;%r\&quot; %&gt;s %b' }
</code></pre>
<p>
There are a number of predefined <code>LogFormats</code>
 in the <code>httpd.conf</code>
 that Puppet creates:</p>
<pre><code class="language-httpd">  LogFormat &quot;%h %l %u %t \&quot;%r\&quot; %&gt;s %b \&quot;%{Referer}i\&quot; \&quot;%{User-Agent}i\&quot;&quot; combined
  LogFormat &quot;%h %l %u %t \&quot;%r\&quot; %&gt;s %b&quot; common
  LogFormat &quot;%{Referer}i -&gt; %U&quot; referer
  LogFormat &quot;%{User-agent}i&quot; agent
  LogFormat &quot;%{X-Forwarded-For}i %l %u %t \&quot;%r\&quot; %s %b \&quot;%{Referer}i\&quot; \&quot;%{User-agent}i\&quot;&quot; forwarded
</code></pre>
<p>
If your <code>log_formats</code>
 parameter contains one of those, it will be overwritten with <strong>your</strong>
 definition.</p>
<p>
Default value: <code>{}</code>
</p>
<h5>
<a name="logroot"></a>
<code>logroot</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>Changes the directory of Apache log files for the virtual host.</p>
<p>
Default value: <code>$apache::params::logroot</code>
</p>
<h5>
<a name="logroot_mode"></a>
<code>logroot_mode</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>
Overrides the default <code>logroot</code>
 directory's mode.<br /></p>
<blockquote>
<p>
<strong>Note</strong>
: Do <em>not</em>
 grant write access to the directory where the logs are stored
without being aware of the consequences. See the <a href="https://httpd.apache.org/docs/current/logs.html#security">Apache documentation</a>

for details.</p>
</blockquote>
<p>
Default value: <code>$apache::params::logroot_mode</code>
</p>
<h5>
<a name="manage_group"></a>
<code>manage_group</code>
</h5>
<p>
Data type: <code>Boolean</code>
</p>
<p>
When <code>false</code>
, stops Puppet from creating the group resource.<br />

If you have a group created from another Puppet module that you want to use to run Apache,
set this to <code>false</code>
. Without this parameter, attempting to use a previously established
group results in a duplicate resource error.</p>
<p>
Default value: <code>true</code>
</p>
<h5>
<a name="supplementary_groups"></a>
<code>supplementary_groups</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>
A list of groups to which the user belongs. These groups are in addition to the primary group.<br />

Notice: This option only has an effect when <code>manage_user</code>
 is set to true.</p>
<p>
Default value: <code>[]</code>
</p>
<h5>
<a name="manage_user"></a>
<code>manage_user</code>
</h5>
<p>
Data type: <code>Boolean</code>
</p>
<p>
When <code>false</code>
, stops Puppet from creating the user resource.<br />
This is for instances when you have a user, created from another Puppet module, you want
to use to run Apache. Without this parameter, attempting to use a previously established
user would result in a duplicate resource error.</p>
<p>
Default value: <code>true</code>
</p>
<h5>
<a name="mod_dir"></a>
<code>mod_dir</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>Sets where Puppet places configuration files for your Apache modules.</p>
<p>
Default value: <code>$apache::params::mod_dir</code>
</p>
<h5>
<a name="mod_libs"></a>
<code>mod_libs</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>Allows the user to override default module library names.</p>
<pre><code class="language-puppet">include apache::params
class { 'apache':
  mod_libs =&gt; merge($::apache::params::mod_libs, {
    'wsgi' =&gt; 'mod_wsgi_python3.so',
  })
}
</code></pre>
<p>
Default value: <code>$apache::params::mod_libs</code>
</p>
<h5>
<a name="mod_packages"></a>
<code>mod_packages</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>Allows the user to override default module package names.</p>
<pre><code class="language-puppet">include apache::params
class { 'apache':
  mod_packages =&gt; merge($::apache::params::mod_packages, {
    'auth_kerb' =&gt; 'httpd24-mod_auth_kerb',
  })
}
</code></pre>
<p>
Default value: <code>$apache::params::mod_packages</code>
</p>
<h5>
<a name="mpm_module"></a>
<code>mpm_module</code>
</h5>
<p>
Data type: <code>Any</code>
</p>
<p>
Determines which <a href="https://httpd.apache.org/docs/current/mpm.html">multi-processing module</a>
 (MPM) is loaded and configured for the
HTTPD process. Valid values are: <code>event</code>
, <code>itk</code>
, <code>peruser</code>
, <code>prefork</code>
, <code>worker</code>
 or <code>false</code>
.<br />

You must set this to <code>false</code>
 to explicitly declare the following classes with custom parameters:</p>
<ul>
<li>
<code>apache::mod::event</code>
</li>
<li>
<code>apache::mod::itk</code>
</li>
<li>
<code>apache::mod::peruser</code>
</li>
<li>
<code>apache::mod::prefork</code>
</li>
<li>
<code>apache::mod::worker</code>
</li>
</ul>
<p>
Default value: <code>$apache::params::mpm_module</code>
</p>
</body>
